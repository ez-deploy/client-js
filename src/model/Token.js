/*
 * ez-deploy apiserver.
 * apiserver
 *
 * OpenAPI spec version: 1.0.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.27
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.EzDeployApiserver) {
      root.EzDeployApiserver = {};
    }
    root.EzDeployApiserver.Token = factory(root.EzDeployApiserver.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';

  /**
   * The Token model module.
   * @module model/Token
   * @version 1.0.0
   */

  /**
   * Constructs a new <code>Token</code>.
   * Token Object
   * @alias module:model/Token
   * @class
   */
  var exports = function() {
  };

  /**
   * Constructs a <code>Token</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/Token} obj Optional instance to populate.
   * @return {module:model/Token} The populated <code>Token</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('id'))
        obj.id = ApiClient.convertToType(data['id'], 'Number');
      if (data.hasOwnProperty('user_id'))
        obj.userId = ApiClient.convertToType(data['user_id'], 'Number');
      if (data.hasOwnProperty('value'))
        obj.value = ApiClient.convertToType(data['value'], 'String');
      if (data.hasOwnProperty('type'))
        obj.type = ApiClient.convertToType(data['type'], 'String');
      if (data.hasOwnProperty('create_at'))
        obj.createAt = ApiClient.convertToType(data['create_at'], 'Number');
      if (data.hasOwnProperty('update_at'))
        obj.updateAt = ApiClient.convertToType(data['update_at'], 'Number');
      if (data.hasOwnProperty('expired_at'))
        obj.expiredAt = ApiClient.convertToType(data['expired_at'], 'Number');
    }
    return obj;
  }

  /**
   * id
   * @member {Number} id
   */
  exports.prototype.id = undefined;

  /**
   * user's id
   * @member {Number} userId
   */
  exports.prototype.userId = undefined;

  /**
   * token value
   * @member {String} value
   */
  exports.prototype.value = undefined;

  /**
   * token type
   * @member {module:model/Token.TypeEnum} type
   */
  exports.prototype.type = undefined;

  /**
   * create at, unix timestamp
   * @member {Number} createAt
   */
  exports.prototype.createAt = undefined;

  /**
   * create at, unix timestamp
   * @member {Number} updateAt
   */
  exports.prototype.updateAt = undefined;

  /**
   * expired at, unix timestamp
   * @member {Number} expiredAt
   */
  exports.prototype.expiredAt = undefined;



  /**
   * Allowed values for the <code>type</code> property.
   * @enum {String}
   * @readonly
   */
  exports.TypeEnum = {
    /**
     * value: "session"
     * @const
     */
    session: "session",

    /**
     * value: "private"
     * @const
     */
    _private: "private",

    /**
     * value: "public"
     * @const
     */
    _public: "public"
  };

  return exports;

}));
