/*
 * ez-deploy apiserver.
 * apiserver
 *
 * OpenAPI spec version: 1.0.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.27
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.EzDeployApiserver);
  }
}(this, function(expect, EzDeployApiserver) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new EzDeployApiserver.PodApi();
  });

  describe('(package)', function() {
    describe('PodApi', function() {
      describe('checkPodTicket', function() {
        it('should call checkPodTicket successfully', function(done) {
          // TODO: uncomment, update parameter values for checkPodTicket call and complete the assertions
          /*
          var ticketValue = "ticketValue_example";

          instance.checkPodTicket(ticketValue, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(EzDeployApiserver.SSHPodTicket);
            expect(data.id).to.be.a('number');
            expect(data.id).to.be(1);
            expect(data.ticket).to.be.a('string');
            expect(data.ticket).to.be("AISBJFCOIZXUF==");
            expect(data.userId).to.be.a('number');
            expect(data.userId).to.be(1);
            expect(data.namespaceName).to.be.a('string');
            expect(data.namespaceName).to.be("foobar");
            expect(data.podName).to.be.a('string');
            expect(data.podName).to.be("foobar-9zqb2");
            expect(data.createAt).to.be.a('number');
            expect(data.createAt).to.be(0);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('createPodTicket', function() {
        it('should call createPodTicket successfully', function(done) {
          // TODO: uncomment, update parameter values for createPodTicket call and complete the assertions
          /*
          var body = new EzDeployApiserver.Body();

          instance.createPodTicket(body, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(EzDeployApiserver.SSHPodTicket);
            expect(data.id).to.be.a('number');
            expect(data.id).to.be(1);
            expect(data.ticket).to.be.a('string');
            expect(data.ticket).to.be("AISBJFCOIZXUF==");
            expect(data.userId).to.be.a('number');
            expect(data.userId).to.be(1);
            expect(data.namespaceName).to.be.a('string');
            expect(data.namespaceName).to.be("foobar");
            expect(data.podName).to.be.a('string');
            expect(data.podName).to.be("foobar-9zqb2");
            expect(data.createAt).to.be.a('number');
            expect(data.createAt).to.be(0);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
    });
  });

}));
