/*
 * ez-deploy apiserver.
 * apiserver
 *
 * OpenAPI spec version: 1.0.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.27
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.EzDeployApiserver);
  }
}(this, function(expect, EzDeployApiserver) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('PodInfo', function() {
      beforeEach(function() {
        instance = new EzDeployApiserver.PodInfo();
      });

      it('should create an instance of PodInfo', function() {
        // TODO: update the code to test PodInfo
        expect(instance).to.be.a(EzDeployApiserver.PodInfo);
      });

      it('should have the property name (base name: "name")', function() {
        // TODO: update the code to test the property name
        expect(instance).to.have.property('name');
        // expect(instance.name).to.be(expectedValueLiteral);
      });

      it('should have the property status (base name: "status")', function() {
        // TODO: update the code to test the property status
        expect(instance).to.have.property('status');
        // expect(instance.status).to.be(expectedValueLiteral);
      });

      it('should have the property restarts (base name: "restarts")', function() {
        // TODO: update the code to test the property restarts
        expect(instance).to.have.property('restarts');
        // expect(instance.restarts).to.be(expectedValueLiteral);
      });

      it('should have the property age (base name: "age")', function() {
        // TODO: update the code to test the property age
        expect(instance).to.have.property('age');
        // expect(instance.age).to.be(expectedValueLiteral);
      });

      it('should have the property ip (base name: "ip")', function() {
        // TODO: update the code to test the property ip
        expect(instance).to.have.property('ip');
        // expect(instance.ip).to.be(expectedValueLiteral);
      });

      it('should have the property node (base name: "node")', function() {
        // TODO: update the code to test the property node
        expect(instance).to.have.property('node');
        // expect(instance.node).to.be(expectedValueLiteral);
      });

    });
  });

}));
